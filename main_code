#include <SPI.h>
#include <WiFiNINA.h>
#include <DHT.h>
#include <ThingSpeak.h>
#include "secrets.h"  // Include the secrets header file for credentials

// DHT Sensor Setup
#define DHTPIN 2         // DHT11 is connected to digital pin 2
#define DHTTYPE DHT11    // Change to DHT22 if using it
DHT dht(DHTPIN, DHTTYPE);

WiFiClient client;

void setup() {
  Serial.begin(115200);

  // Initialize DHT sensor
  dht.begin();

  // Connect to WiFi
  WiFi.begin(SECRET_SSID, SECRET_PASS);
  Serial.print("Connecting to WiFi");

  int attempts = 0;
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
    attempts++;

    // Optional: Add a timeout to prevent infinite loop
    if (attempts > 20) {
      Serial.println("\nFailed to connect to WiFi. Check credentials and signal.");
      while (true) {
        // Halt the program
        delay(1000);
      }
    }
  }

  Serial.println("\nConnected to WiFi");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  // Initialize ThingSpeak
  ThingSpeak.begin(client);
}

void loop() {
  // Read data from DHT11 sensor
  float temperature = dht.readTemperature(); // Get temperature in °C
  float humidity = dht.readHumidity();       // Get humidity

  // Check if readings are valid
  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  // Print sensor data to Serial Monitor
  Serial.print("Temperature: "); Serial.print(temperature); Serial.print(" °C, ");
  Serial.print("Humidity: "); Serial.print(humidity); Serial.println(" %");

  // Send data to ThingSpeak
  ThingSpeak.setField(1, temperature);
  ThingSpeak.setField(2, humidity);

  int response = ThingSpeak.writeFields(SECRET_CH_ID, SECRET_WRITE_APIKEY);
  if (response == 200) {
    Serial.println("Data sent successfully!");
  } else {
    Serial.print("Error sending data! Code: ");
    Serial.println(response);
  }

  delay(60000); // Send data every 60 seconds
}
